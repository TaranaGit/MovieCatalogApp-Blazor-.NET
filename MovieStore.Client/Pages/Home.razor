@page "/"
@using Models
@inject NavigationManager NavigationManager


<PageTitle>Movie Catalog</PageTitle>
<h1>Movie Catalog</h1>

<div class="rom mb-4">
    <div class="col-sm-6">
        <button type="button" class="btn btn-primary" @onclick="CreateMovie">New Movie</button>
    </div>
</div>

@if (movies is null)
{
    <p><em>Loading....</em></p>
}
else
{
    <DeleteMovie Movie="@currentMovie" onClose="@onDeleteModalClose">
    </DeleteMovie>

    <table class="table table-striped table-bordered table-hover">
        <thead class="table-dark">
            <th>Id</th>
            <th>Name</th>
            <th>Genre</th>
            <th>Price</th>
            <th>Release Date</th>
            <th></th>
        </thead>
        <tbody>
            @foreach (var item in movies)
            {
                <tr>
                    <td>@item.Id</td>
                    <td>@item.Name</td>
                    <td>@item.Genre</td>
                    <td>@item.Price</td>
                    <td>@item.ReleaseDate.ToString("MM/dd/yyyy")</td>
                    <td>
                        <button class="btn btn-primary" @onclick="(() => EditMovie(item.Id))">
                            <i class="oi oi-pencil"></i>
                        </button>

                        <button class="btn btn-danger" data-bs-toggle="modal" data-bs-target="#deleteModal"
                            @onclick="(() => currentMovie = item)">
                            <i class="oi oi-x"></i>
                        </button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private Movie[]? movies;
    private Movie? currentMovie;
    protected override void OnInitialized()
    {
        movies = MovieClient.GetMovies();
    }

    private void CreateMovie()
    {
        NavigationManager.NavigateTo("/movie");
    }

    private void EditMovie(int id)
    {
        NavigationManager.NavigateTo($"/movie{id}");
    }

    private void onDeleteModalClose(bool accepted)
    {
        MovieClient.DeleteMovie(currentMovie!.Id);
        movies = MovieClient.GetMovies();
    }
}
